AWSTemplateFormatVersion: 2010-09-09
Outputs:
  WwwURL:
    Value: !GetAtt 
      - WWWBucket1
      - WebsiteURL
Resources:
  StageBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !GetAtt 
              - CreateWWW
              - Arn
            Event: 's3:ObjectCreated:*'
      BucketName: !Sub '${SiteName}-stage'
    DependsOn:
      - CreateWWWStageBucketEventPermission
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 671a9600-ae3e-4c9f-9165-124e1db5c6eb
  CreateWWW:
    Type: 'AWS::Lambda::Function'
    Properties:
      Layers:
        - !Ref CreateWWWRubyLayer9cca5ad8ec
      Code:
        S3Bucket: cf-templates-1u09o5tfcbfm2-eu-north-1
        S3Key: 2f5a5464ac0169160bec80f25f9a87fd
      Tags:
        - Value: SAM
          Key: 'lambda:createdBy'
      MemorySize: 1024
      Environment:
        Variables:
          WWW: !Ref WWWBucket1
          STAGING: !Sub '${SiteName}-stage'
      Handler: www_function.handler
      Role: !GetAtt 
        - CreateWWWRole
        - Arn
      Timeout: 300
      Runtime: ruby2.5
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ab9540f5-256f-45c8-b6a2-1dc9ab7d0b72
  CreateWWWRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: CreateWWWRolePolicy0
          PolicyDocument:
            Statement:
              - Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 's3:GetLifecycleConfiguration'
                  - 's3:PutLifecycleConfiguration'
                  - 's3:DeleteObject'
                Resource:
                  - !Sub 
                    - 'arn:${AWS::Partition}:s3:::${bucketName}'
                    - bucketName: !Sub '${SiteName}-stage'
                  - !Sub 
                    - 'arn:${AWS::Partition}:s3:::${bucketName}/*'
                    - bucketName: !Sub '${SiteName}-stage'
                Effect: Allow
        - PolicyName: CreateWWWRolePolicy1
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*'
                Resource:
                  - !Sub 'arn:aws:s3:::${SiteName}'
                  - !Sub 'arn:aws:s3:::${SiteName}/*'
                  - !Sub 'arn:aws:s3:::www.${SiteName}'
                  - !Sub 'arn:aws:s3:::www.${SiteName}/*'
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - s3.amazonaws.com
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e905d7ee-2337-46c3-80e2-4fdc68e6bc83
  WWWBucket1:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${SiteName}'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d93eb1b2-326a-4ba0-bf3b-501ea5151655
        
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'WWWBucket1'
      PolicyDocument:
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource: 
            - !Sub 'arn:aws:s3:::${SiteName}'
            - !Sub 'arn:aws:s3:::${SiteName}/*'
  WWWBucket2:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'www.${SiteName}'
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Sub '${SiteName}'
          Protocol: http
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 05f6d142-5eef-41fd-926c-023f183dd77a
  CreateWWWRubyLayer9cca5ad8ec:
    DeletionPolicy: Retain
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      Content:
        S3Bucket: cf-templates-1u09o5tfcbfm2-eu-north-1
        S3Key: b2fb8cf06e9adfb3a6e3e641a6347739
      LayerName: CreateWWWRubyLayer
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b7339e95-27eb-4399-a401-af40253f205f
  CreateWWWStageBucketEventPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      SourceAccount: !Ref 'AWS::AccountId'
      FunctionName: !Ref CreateWWW
      Principal: s3.amazonaws.com
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 93c1dc48-97ce-43d3-b11c-75a5611438b1
  StagingUser:
    Type: 'AWS::IAM::User'
    Properties:
      Policies:
        - PolicyName: AllowStagingBucketAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource:
                  - !GetAtt 
                    - StageBucket
                    - Arn
                  - !Sub 'arn:${AWS::Partition}:s3:::${SiteName}-stage/*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 775cea76-0a13-4449-b5e4-58d50c64f713
  StagingUserKeys:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      Serial: 1
      Status: Active
      UserName: !Ref StagingUser
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3cc3632a-bc7f-43de-bd49-e4b2d2e46b7d
  
  WWWRec1:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Name: !Sub '${SiteName}'
      Type: A
      HostedZoneName: !Join ['', [!Ref 'SiteName', .]]
      AliasTarget:
        DNSName: 's3-website.eu-north-1.amazonaws.com'
        HostedZoneId: 'Z3BAZG2TWCNX0D'
  WWWRec2:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Name: !Sub 'www.${SiteName}'
      Type: A
      HostedZoneName: !Join ['', [!Ref 'SiteName', .]]
      AliasTarget:
        DNSName: 's3-website.eu-north-1.amazonaws.com'
        HostedZoneId: 'Z3BAZG2TWCNX0D'
Description: www-publisher stack
Parameters:
  SiteName:
    Type: String
Metadata:
  'AWS::CloudFormation::Designer':
    b7339e95-27eb-4399-a401-af40253f205f:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    d93eb1b2-326a-4ba0-bf3b-501ea5151655:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
    e905d7ee-2337-46c3-80e2-4fdc68e6bc83:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
    ab9540f5-256f-45c8-b6a2-1dc9ab7d0b72:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
    93c1dc48-97ce-43d3-b11c-75a5611438b1:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
      isassociatedwith:
        - ab9540f5-256f-45c8-b6a2-1dc9ab7d0b72
    671a9600-ae3e-4c9f-9165-124e1db5c6eb:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 210
      z: 1
      embeds: []
      dependson:
        - 93c1dc48-97ce-43d3-b11c-75a5611438b1
    05f6d142-5eef-41fd-926c-023f183dd77a:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': -10
      z: 1
      embeds: []
